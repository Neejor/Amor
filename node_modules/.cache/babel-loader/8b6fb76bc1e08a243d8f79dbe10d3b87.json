{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebDev\\\\Amor\\\\amor\\\\src\\\\components\\\\chatRoomComp\\\\chat.js\";\nimport { useState, useEffect } from \"react\";\nimport \"./chatStyles.css\";\nimport useLocalStorage from \"../../hooks/useLocalStorage\";\nimport { v4 } from \"uuid\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function () {\n  const socket = useSelector(state => state.socket);\n  const [id, setID] = useLocalStorage('id');\n  const user1 = \"c856d200-6b1a-45f9-bb4e-4120cf236a41\";\n  const user2 = \"d5e7b728-a95b-48e1-863b-f22c9c470757\";\n\n  function createRoom(user1, user2) {\n    if (user1.localeCompare(user2) < 0) return user1 + '@' + user2;\n    return user2 + '@' + user1;\n  }\n\n  useEffect(() => {\n    console.log(socket);\n  }, []);\n  const room = createRoom(user1, user2);\n  socket.emit(\"joinRoom\", room);\n  const [msg, setMsg] = useState([{\n    class: \"otherUser\",\n    message: \"Everybody's got opinions on our thing Say we're flying down a path with no ending And if I die before I wake Ooh, don't let me wake up from this dream\"\n  }, {\n    class: \"ogUser\",\n    message: \"When we collide When we collide, it's a beautiful disaster When I crash into you, you, you Crash into you, you\"\n  }]);\n\n  function showMessages(item) {\n    console.log(item.id);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `msg ${item.class}`,\n      children: item.message\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n  function sendMessage(e) {\n    e.preventDefault();\n    socket.emit(\"send_message\", {\n      room: room,\n      text: e.target.input.value,\n      id: id\n    });\n  }\n\n  socket.on(\"retrieve_message_from_sv\", message => {\n    let CLS;\n    if (id === message.id) CLS = \"ogUser\";else CLS = \"otherUser\";\n    setMsg([...msg, {\n      class: CLS,\n      message: message.text\n    }]);\n  });\n\n  function createID() {\n    setID(v4());\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createID,\n        children: \"Create new ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"chatContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"messages\",\n        children: msg.map(showMessages)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messageBox\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"form\",\n          action: \"\",\n          onSubmit: sendMessage,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"input\",\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["D:/WebDev/Amor/amor/src/components/chatRoomComp/chat.js"],"names":["useState","useEffect","useLocalStorage","v4","useSelector","socket","state","id","setID","user1","user2","createRoom","localeCompare","console","log","room","emit","msg","setMsg","class","message","showMessages","item","sendMessage","e","preventDefault","text","target","input","value","on","CLS","createID","map"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport \"./chatStyles.css\";\r\nimport useLocalStorage from \"../../hooks/useLocalStorage\";\r\nimport {v4} from \"uuid\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function() {\r\n    const socket =  useSelector(state=>state.socket);\r\n    const [id, setID] = useLocalStorage('id');\r\n\r\n    const user1 = \"c856d200-6b1a-45f9-bb4e-4120cf236a41\";\r\n    const user2 = \"d5e7b728-a95b-48e1-863b-f22c9c470757\";\r\n\r\n    function createRoom(user1,user2) {\r\n        if(user1.localeCompare(user2)<0)\r\n            return (user1 + '@' + user2);\r\n        return (user2 + '@' + user1);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        console.log(socket);\r\n    },[]);\r\n    const room = createRoom(user1,user2);\r\n    socket.emit(\"joinRoom\", room);\r\n\r\n    const [msg, setMsg] = useState([{\r\n        class: \"otherUser\",\r\n        message: \"Everybody's got opinions on our thing Say we're flying down a path with no ending And if I die before I wake Ooh, don't let me wake up from this dream\"\r\n    },\r\n    {\r\n        class: \"ogUser\",\r\n        message: \"When we collide When we collide, it's a beautiful disaster When I crash into you, you, you Crash into you, you\"\r\n    }]);\r\n\r\n    function showMessages(item) {\r\n        console.log(item.id)\r\n        return (\r\n            <div className={`msg ${item.class}`} key={item.id}>\r\n                {item.message}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function sendMessage(e) {\r\n        e.preventDefault();\r\n        socket.emit(\"send_message\",{room: room, text: e.target.input.value, id: id});\r\n    }\r\n\r\n    socket.on(\"retrieve_message_from_sv\", (message)=>{\r\n        \r\n        let CLS;\r\n        if(id === message.id) \r\n            CLS = \"ogUser\";\r\n        else \r\n            CLS = \"otherUser\";\r\n        \r\n            setMsg([...msg, {class: CLS, message: message.text}]);\r\n    })\r\n\r\n    function createID() {\r\n        setID(v4());\r\n    }\r\n    return (\r\n        <>\r\n            <h3>{id}</h3>\r\n            <div>\r\n                <button onClick={createID}>Create new ID</button>\r\n            </div>\r\n            <section className=\"chatContainer\">\r\n                <div className=\"banner\"></div>\r\n                <div id=\"messages\">\r\n                    {msg.map(showMessages)}\r\n                </div>\r\n                <div className=\"messageBox\">\r\n                    <form id=\"form\" action=\"\" onSubmit={sendMessage}>\r\n                    <input id=\"input\" autoComplete=\"off\" /><button>Send</button>\r\n                    </form>\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}