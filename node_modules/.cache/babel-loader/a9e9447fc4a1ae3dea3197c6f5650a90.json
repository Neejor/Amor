{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebDev\\\\Amor\\\\amor\\\\src\\\\components\\\\signUpComp\\\\fileInput\\\\fileInput.js\";\nimport { useRef, useState } from \"react\";\nimport UploadedImage from \"./uploadedImg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function () {\n  const fileRef = useRef();\n  const [uploaded, setUploaded] = useState(false);\n  const [upUrl, setUpUrl] = useState(null);\n\n  function getBase64(file) {\n    return new Promise(resolve => {\n      let baseURL = \"\"; // Make new FileReader\n\n      let reader = new FileReader(); // Convert the file to base64 text\n\n      reader.readAsDataURL(file); // on reader load somthing...\n\n      reader.onload = () => {\n        baseURL = reader.result;\n        resolve(baseURL);\n      };\n    });\n  }\n\n  function handleChange(e) {\n    let file = e.target.files[0];\n    fileRef.current = file;\n    let d;\n    getBase64(file).then(result => {\n      d = result;\n      setUpUrl(d);\n      setUploaded(true);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"imgUp col-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fileContainer\",\n      children: /*#__PURE__*/_jsxDEV(UploadedImage, {\n        imgUrl: upUrl,\n        uploaded: uploaded,\n        setUploaded: setUploaded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["D:/WebDev/Amor/amor/src/components/signUpComp/fileInput/fileInput.js"],"names":["useRef","useState","UploadedImage","fileRef","uploaded","setUploaded","upUrl","setUpUrl","getBase64","file","Promise","resolve","baseURL","reader","FileReader","readAsDataURL","onload","result","handleChange","e","target","files","current","d","then","catch","err","console","log"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,eAA1B;;;AAEA,eAAe,YAAW;AACxB,QAAMC,OAAO,GAAGH,MAAM,EAAtB;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;;AAEA,WAASO,SAAT,CAAmBC,IAAnB,EAAyB;AACvB,WAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC9B,UAAIC,OAAO,GAAG,EAAd,CAD8B,CAE9B;;AACA,UAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb,CAH8B,CAK9B;;AACAD,MAAAA,MAAM,CAACE,aAAP,CAAqBN,IAArB,EAN8B,CAQ9B;;AACAI,MAAAA,MAAM,CAACG,MAAP,GAAgB,MAAM;AACpBJ,QAAAA,OAAO,GAAGC,MAAM,CAACI,MAAjB;AACAN,QAAAA,OAAO,CAACC,OAAD,CAAP;AACD,OAHD;AAID,KAbM,CAAP;AAcD;;AAED,WAASM,YAAT,CAAsBC,CAAtB,EAAyB;AACvB,QAAIV,IAAI,GAAGU,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAX;AACAlB,IAAAA,OAAO,CAACmB,OAAR,GAAkBb,IAAlB;AACA,QAAIc,CAAJ;AACAf,IAAAA,SAAS,CAACC,IAAD,CAAT,CACGe,IADH,CACSP,MAAD,IAAY;AAChBM,MAAAA,CAAC,GAAGN,MAAJ;AACAV,MAAAA,QAAQ,CAACgB,CAAD,CAAR;AACAlB,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KALH,EAMGoB,KANH,CAMUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KARH;AASD;;AACC,sBACE;AAAA,4BACE;AAAO,MAAA,SAAS,EAAC,gBAAjB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAER,YAA7B;AAA2C,QAAA,QAAQ;AAAnD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,6BACE,QAAC,aAAD;AACA,QAAA,MAAM,EAAEZ,KADR;AAEA,QAAA,QAAQ,EAAEF,QAFV;AAGA,QAAA,WAAW,EAAEC;AAHb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AAeH","sourcesContent":["import { useRef, useState } from \"react\";\r\nimport UploadedImage from \"./uploadedImg\";\r\n\r\nexport default function() {\r\n  const fileRef = useRef();\r\n  const [uploaded, setUploaded] = useState(false);\r\n  const [upUrl, setUpUrl] = useState(null);\r\n\r\n  function getBase64(file) {\r\n    return new Promise((resolve) => {\r\n      let baseURL = \"\";\r\n      // Make new FileReader\r\n      let reader = new FileReader();\r\n\r\n      // Convert the file to base64 text\r\n      reader.readAsDataURL(file);\r\n\r\n      // on reader load somthing...\r\n      reader.onload = () => {\r\n        baseURL = reader.result;\r\n        resolve(baseURL);\r\n      };\r\n    });\r\n  }\r\n\r\n  function handleChange(e) {\r\n    let file = e.target.files[0];\r\n    fileRef.current = file;\r\n    let d;\r\n    getBase64(file)\r\n      .then((result) => {\r\n        d = result;\r\n        setUpUrl(d);\r\n        setUploaded(true);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n    return (\r\n      <>\r\n        <label className=\"imgUp col-auto\">\r\n            <span>+</span>\r\n            <input type=\"file\" onChange={handleChange} required/>\r\n        </label>\r\n        <div className=\"fileContainer\">\r\n          <UploadedImage\r\n          imgUrl={upUrl}\r\n          uploaded={uploaded}\r\n          setUploaded={setUploaded}\r\n          />\r\n        </div>\r\n      </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}