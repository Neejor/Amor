{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebDev\\\\Amor\\\\amor\\\\src\\\\contexts\\\\socketContextProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socketContext = /*#__PURE__*/React.createContext();\nexport function useSocket() {\n  _s();\n\n  return useContext(socketContext);\n}\n\n_s(useSocket, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport default function ({\n  id,\n  children\n}) {\n  const [socket, setSocket] = useState();\n  useEffect(() => {\n    const ENDPOINT = \"http://localhost:4000\";\n    const newSocket = io(ENDPOINT, {\n      secure: true,\n      query: {\n        id\n      }\n    });\n    newSocket.on(\"connect\", function () {\n      console.log(\"connected\");\n    });\n    newSocket.on(\"disconnect\", function () {\n      console.log(\"disconnected\");\n    });\n    newSocket.on(\"welcome\", message => {\n      console.log(message);\n    });\n    newSocket.on(\"another\", message => {\n      console.log(message);\n    });\n    newSocket.on(\"u_disconnect\", message => {\n      console.log(message);\n    });\n    setSocket(newSocket);\n    return () => newSocket.close();\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(socketContext.Provider, {\n      value: socket,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}","map":{"version":3,"sources":["D:/WebDev/Amor/amor/src/contexts/socketContextProvider.js"],"names":["React","useEffect","useState","useContext","io","socketContext","createContext","useSocket","id","children","socket","setSocket","ENDPOINT","newSocket","secure","query","on","console","log","message","close"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,EAAP,MAAe,kBAAf;;;AAEA,MAAMC,aAAa,gBAAGL,KAAK,CAACM,aAAN,EAAtB;AAEA,OAAO,SAASC,SAAT,GAAqB;AAAA;;AACxB,SAAOJ,UAAU,CAACE,aAAD,CAAjB;AACH;;GAFeE,S;;AAIhB,eAAe,UAAS;AAACC,EAAAA,EAAD;AAAKC,EAAAA;AAAL,CAAT,EAAyB;AACpC,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBT,QAAQ,EAAnC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMW,QAAQ,GAAG,uBAAjB;AAEA,UAAMC,SAAS,GAAGT,EAAE,CAACQ,QAAD,EAAW;AAAEE,MAAAA,MAAM,EAAE,IAAV;AAAgBC,MAAAA,KAAK,EAAE;AAACP,QAAAA;AAAD;AAAvB,KAAX,CAApB;AACAK,IAAAA,SAAS,CAACG,EAAV,CAAa,SAAb,EAAwB,YAAU;AAC9BC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH,KAFD;AAIAL,IAAAA,SAAS,CAACG,EAAV,CAAa,YAAb,EAA2B,YAAU;AACjCC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH,KAFD;AAIAL,IAAAA,SAAS,CAACG,EAAV,CAAa,SAAb,EAAyBG,OAAD,IAAa;AACnCF,MAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AACD,KAFD;AAIAN,IAAAA,SAAS,CAACG,EAAV,CAAa,SAAb,EAAyBG,OAAD,IAAa;AACnCF,MAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AACD,KAFD;AAIAN,IAAAA,SAAS,CAACG,EAAV,CAAa,cAAb,EAA8BG,OAAD,IAAa;AACxCF,MAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AACD,KAFD;AAGAR,IAAAA,SAAS,CAACE,SAAD,CAAT;AAEA,WAAO,MAAIA,SAAS,CAACO,KAAV,EAAX;AACH,GA1BQ,EA0BP,CAACZ,EAAD,CA1BO,CAAT;AA2BA,sBAAQ;AAAA,2BACJ,QAAC,aAAD,CAAe,QAAf;AAAwB,MAAA,KAAK,EAAEE,MAA/B;AAAA,gBACKD;AADL;AAAA;AAAA;AAAA;AAAA;AADI,mBAAR;AAKH","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport io from \"socket.io-client\";\r\n\r\nconst socketContext = React.createContext();\r\n\r\nexport function useSocket() {\r\n    return useContext(socketContext);\r\n}\r\n\r\nexport default function({id, children}) {\r\n    const [socket,setSocket] = useState();\r\n\r\n    useEffect(()=>{\r\n        const ENDPOINT = \"http://localhost:4000\";\r\n    \r\n        const newSocket = io(ENDPOINT, { secure: true, query: {id} });\r\n        newSocket.on(\"connect\", function(){\r\n            console.log(\"connected\");\r\n        });\r\n    \r\n        newSocket.on(\"disconnect\", function(){\r\n            console.log(\"disconnected\");\r\n        });\r\n    \r\n        newSocket.on(\"welcome\", (message) => {\r\n          console.log(message);\r\n        });\r\n    \r\n        newSocket.on(\"another\", (message) => {\r\n          console.log(message);\r\n        })\r\n    \r\n        newSocket.on(\"u_disconnect\", (message) => {\r\n          console.log(message);\r\n        });\r\n        setSocket(newSocket);\r\n\r\n        return ()=>newSocket.close();\r\n    },[id]);\r\n    return (<>\r\n        <socketContext.Provider value={socket}>\r\n            {children}\r\n        </socketContext.Provider>\r\n    </>)\r\n}"]},"metadata":{},"sourceType":"module"}